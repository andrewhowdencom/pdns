---
kind: "pipeline"
name: "dependencies"
steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
    - name: cache--gopkg
      path: ./go
    settings:
      restore: true
      mount:
        - "./go"
  - name: "vendor"
    image: "golang:1.13.0-buster"
    commands:
      - cd src && go build
    environment:
      GOPATH: "/drone/src/go"
  - name: rebuild-cache
    image: drillster/drone-volume-cache
    volumes:
    - name: cache--gopkg
      path: "./go"
    settings:
      rebuild: true
      mount:
        - "./go"
---
kind: "pipeline"
name: "lint"
steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
    - name: cache--gopkg
      path: ./go
    settings:
      restore: true
      mount:
        - "./go"
  - name: "lint"
    image: "golangci/golangci-lint"
    commands:
      - cd src && golangci-lint run --deadline 5m0s
    environment:
      GO111MODULE: "on"
      GOPATH: "/drone/src/go"
depends_on:
  - "dependencies"
trigger:
  # Execute this process every time a new pull request is opened
  event:
    - pull_request
---
kind: "pipeline"
name: "test"
steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
    - name: cache--gopkg
      path: ./go
    settings:
      restore: true
      mount:
        - "./go"
  - name: "test"
    image: "golang:1.13.0-buster"
    commands:
      - cd src && go test
    environment:
      GOPATH: "/drone/src/go"
depends_on:
  - "dependencies"
trigger:
  event:
    - pull_request
---
kind: "pipeline"
name: "container"
steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
    - name: cache--gopkg
      path: ./go
    settings:
      restore: true
      mount:
        - "./go"
  - name: "metadata"
    image: "golang:1.13.0-buster"
    commands:
      - |
        [ ! -z "$(git tag -l --points-at HEAD)" ] && \
        sed --in-place "s/HEAD/$(git tag -l --points-at HEAD)/"                  src/internal/metadata/version.go
      - sed --in-place "s/000000/$(git rev-parse --short HEAD)/"                 src/internal/metadata/version.go
      - sed --in-place "s/1970-01-01 00:00:00+00:00/$(date --rfc-3339=seconds)/" src/internal/metadata/version.go
  - name: "container"
    image: "jess/img:v0.5.7"
    privileged: true
    commands:
      # Get access to GitHub
      - |
        echo "$QUAY_ROBOT_PASSWORD"  \
          | img login --username="$QUAY_ROBOT_USERNAME" --password-stdin quay.io

      # Compile the application
      - | 
        img build \
          --tag quay.io/andrewhowdencom/pdns:${DRONE_COMMIT} \
          --tag quay.io/andrewhowdencom/pdns:latest \
          --file build/containers/pdns/Dockerfile \
          .
      # Deploy the artefact
      - img push "quay.io/andrewhowdencom/pdns:latest"
      - img push "quay.io/andrewhowdencom/pdns:${DRONE_COMMIT}"
    environment:
      GOPATH: "/drone/src/go"
      QUAY_ROBOT_USERNAME:
        from_secret: "QUAY_ROBOT_USERNAME"
      QUAY_ROBOT_PASSWORD:
        from_secret: "QUAY_ROBOT_PASSWORD"

depends_on:
  - "dependencies"
trigger:
  branch:
    - master
  event:
    - push

volumes:
  - name: cache--gopkg
    host:
      path: /tmp/cache/gopkg
